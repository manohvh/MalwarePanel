#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
    File:   modules/encryption.py
    Author: codeuk
    Date:   18/07/2022
    Python: 3.10
    Note:   This file is not currently in use! (for a future update)
"""
from typing import Optional
from base64 import urlsafe_b64encode
from cryptography.fernet import Fernet, InvalidToken
from cryptography.hazmat.backends import default_backend
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC

class Encryption:
    """ Functions relating to generating keys and encrypting/decrypting user data """

    def __init__(
        enc,
        salt: Optional[str]="***",
        mkey: Optional[str]="bruh"
    ):
        enc.salt = salt 
        enc.key  = mkey

    @staticmethod
    def GenerateKey(enc):
        """ Generate encryption key with master_key and salt """
        kdf = PBKDF2HMAC(
            algorithm=hashes.SHA256(),
            length=32,
            salt=enc.salt,
            iterations=100000,
            backend=default_backend()
        )
        key = urlsafe_b64encode(kdf.derive(enc.key.encode()))
        return key

    @staticmethod
    def Encrypt(key: str, value: str):
        """ Encrypt value with Fernet and MASTER_KEY """
        try:
            f = Fernet(key)
            encrypted_key = f.encrypt(value.encode())
            return encrypted_key
        finally:
            print(f"encrypt call for -> {value}")

    @staticmethod
    def Decrypt(key: str, value: str):
        """ Decrypt value with Fernet and MASTER_KEY """
        f = Fernet(key)
        try:
            return f.decrypt(value.encode())
        except InvalidToken:
            return b''
        finally:
            print(f"decrypt call for -> {value}")
